from pydantic import BaseModel, EmailStr, Field
from typing import Optional, List
from datetime import datetime, date, timedelta, timezone

IST = timezone(timedelta(hours=5, minutes=30))

class UserDetails(BaseModel):
    id: Optional[int] = Field(default=None)  # bigint → int auto-generated in database
    name: str
    email: EmailStr
    user_id: str
    password: str
    created_at: datetime = Field(default_factory=lambda: datetime.now(IST))
    subscription_end: Optional[date] = None
    display_name: Optional[str] = None  # Hotel/Restaurant name


class UserRegisterModel(BaseModel):
    name: str
    email: EmailStr
    password: str


class LoginRequest(BaseModel):
    email: str
    password: str


class MenuItem(BaseModel):
    id: Optional[int] = Field(default=None)  # bigint → int auto-generated
    dish_name: str
    price: float
    description: Optional[str] = None
    user_id: str  # Foreign key to UserDetails.user_id
    category: Optional[str] = None
    is_available: bool = True
    image_url: str
    is_veg: bool = True

class SubscriptionTransaction(BaseModel):
    id: Optional[int] = Field(default=None)  # Auto-generated by DB
    user_id: str  # Must exist in UserDetails.user_id
    subscription_name: str
    transaction_date: datetime = Field(default_factory=datetime.now(IST))
    amount: float
    status: Optional[str] = None
    subscription_start: date = None
    subscription_end: date = None
